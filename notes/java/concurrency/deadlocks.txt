- a deadlock is the most widely encountered liveness hazard

- a program will be free of lock-ordering deadlocks if all threads acquire the locks they
need in a fixed global order

- a program that never acquires more than one lock at a time cannot experience lock-ordering
deadlock

- alien methods should not be called with a lock held (these methods might acquire other
locks risking a deadlock)

- use timed lock acquisition (Lock.tryLock()) when acquiring multiple locks (as opposed to
intrinsic locking) in order to detect and recover from possible deadlocks
